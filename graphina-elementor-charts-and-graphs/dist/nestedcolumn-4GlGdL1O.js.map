{"version":3,"file":"nestedcolumn-4GlGdL1O.js","sources":["../assets/elementor/js/apex-chart/NestedcolumnChart.js"],"sourcesContent":["import GraphinaApexChartBase from './GraphinaApexChartBase';\n\n// Child class specifically for Nestedcolumn Charts\nexport default class NestedcolumnChart extends GraphinaApexChartBase {\n    constructor() {\n        super();\n        this.observer = null; // For IntersectionObserver\n        this.secondaryChart = [];\n        this.secondaryChartData = [];\n    }\n\n    // Setup handlers for nestedcolumn chart type\n    setUpChartsHandler() {\n        this.chartHandlers = {\n            nested_column: (element) => this.observeChartElement(element, 'bar'),\n        };\n    }\n\n    // Setup IntersectionObserver to call setupChart when the element is in the viewport\n    observeChartElement(element, chartType) {\n        if (gcfe_public_localize.view_port === 'off') {\n            if (!this.observer) {\n                this.observer = new IntersectionObserver(\n                    (entries) => {\n                        entries.forEach((entry) => {\n                            if (entry.isIntersecting) {\n                                this.setupChart(jQuery(entry.target), chartType);\n                                this.observer.unobserve(entry.target);\n                            }\n                        });\n                    },\n                    { threshold: 1 }\n                );\n            }\n            this.observer.observe(element[0]);\n        } else {\n            this.setupChart(element, chartType);\n        }\n    }\n\n    getChartOptions(finalChartOptions, chartType, extraData, responsive_options, elementId) {\n        if (chartType === 'nested_column') {\n            finalChartOptions.plotOptions = {\n                bar: {\n                    distributed: true,\n                    horizontal: true,\n                    barHeight: '75%',\n                    dataLabels: {\n                        position: 'bottom'\n                    }\n                }\n            };\n            finalChartOptions.chart.id = `barYear-${elementId}`;\n            finalChartOptions.chart.events = {\n                dataPointSelection: (event, chartContext, config) => {\n                    this.toggleSecondaryChartData(config.dataPointIndex, finalChartOptions, elementId);\n                },\n            };\n            finalChartOptions.tooltip =  {\n                x: {\n                    show: true\n                },\n                y: {\n                    formatter: function(val) {\n                        let decimal = 0;\n                        let prefix  = extraData.chart_tooltip_prefix_val\n                        let postfix = extraData.chart_tooltip_postfix_val\n                        if( extraData.tooltip_formatter ){\n                            return prefix + new Intl.NumberFormat(window.gcfe_public_localize.locale_with_hyphen, {\n                                minimumFractionDigits: decimal,\n                                maximumFractionDigits: decimal,\n                            }).format(val) + postfix;\n                        }else{\n                            return val\n                        }\n                    }\n                }\n            },\n            finalChartOptions.responsive = responsive_options\n        }\n        this.initSChart(elementId,finalChartOptions)\n        return finalChartOptions;\n    }\n\n    updateSecondaryChartVisibility(elementId) {\n        const secondChartElement = jQuery(`.nested_column-chart-two-${elementId}`)[0];\n        const firstChartElement = jQuery(`.nested_column-chart-one-${elementId}`)[0];\n        if (this.secondaryChartData.length === 0) {\n            secondChartElement.classList.remove(\"active\");\n            firstChartElement.classList.remove(\"chart-quarter-activated\")\n            jQuery(`.nested_column-chart-two-${elementId}`).hide()\n        } else {\n            firstChartElement.classList.add(\"chart-quarter-activated\")\n            secondChartElement.classList.add(\"active\");\n            jQuery(`.nested_column-chart-two-${elementId}`).show()\n        }\n    }\n\n    initSChart(elementId,finalChartOptions){\n        const chartEle = jQuery(`.nested_column-chart-two-${elementId}`)\n        this.secondaryChart[elementId] = new ApexCharts(chartEle[0], chartEle.data('second_chart_options'));\n        this.secondaryChart[elementId].render();\n        jQuery(`.nested_column-chart-two-${elementId}`).hide()\n    }\n\n    toggleSecondaryChartData(index, finalChartOptions, elementId) {\n        \n        // Retrieve the data of the selected index\n        const currentData = finalChartOptions.series[0].data[index];\n        // Check if the data is already in the secondary chart\n        const existingIndex = this.secondaryChartData.findIndex(\n            (data) => data.name === currentData.x\n        );\n    \n        if (existingIndex === -1) {\n            // Add the selected data to the secondary chart\n            this.secondaryChartData.push({\n                name: currentData.x,\n                data: currentData.quarters,\n                color: currentData.color, // Include color for visual consistency\n            });\n        } else {\n            // Remove the data from the secondary chart\n            this.secondaryChartData.splice(existingIndex, 1);\n        }\n    \n        // Update the visibility of the secondary chart\n        this.updateSecondaryChartVisibility(elementId);\n        // Update the secondary chart with the new data\n        if (this.secondaryChart[elementId]) {\n            this.secondaryChart[elementId].updateSeries(this.secondaryChartData);\n        }\n    }\n}\n\n// Initialize NestedcolumnChart\nnew NestedcolumnChart();\n"],"names":["NestedcolumnChart","GraphinaApexChartBase","element","chartType","entries","entry","finalChartOptions","extraData","responsive_options","elementId","event","chartContext","config","val","decimal","prefix","postfix","secondChartElement","firstChartElement","chartEle","index","currentData","existingIndex","data"],"mappings":"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"}