{"version":3,"file":"timeline-QzmbFJL9.js","sources":["../assets/elementor/js/apex-chart/TimelineChart.js"],"sourcesContent":["import GraphinaApexChartBase from './GraphinaApexChartBase';\n\n// Child class specifically for Timeline Charts\nexport default class TimelineChart extends GraphinaApexChartBase {\n    constructor() {\n        super();\n        this.observer = {}; // For IntersectionObserver\n    }\n\n    // Setup handlers for timeline chart type\n    setUpChartsHandler() {\n        this.chartHandlers = {\n            timeline: (element) => this.observeChartElement(element, 'timeline'),\n        };\n    }\n\n    dateFormat(timestamp, showTime = false, showDate = false) {\n        const date = new Date(timestamp);\n        const pad = (n) => (n < 10 ? '0' + n : n);\n\n        const day = pad(date.getDate());\n        const month = pad(date.getMonth() + 1);\n        const year = date.getFullYear();\n        const hours = pad(date.getHours());\n        const minutes = pad(date.getMinutes());\n\n        let dateStr = showDate ? `${day}-${month}-${year}` : '';\n        let timeStr = showTime ? `${hours}:${minutes}` : '';\n\n        return showDate && showTime ? `${dateStr} ${timeStr}` : (dateStr || timeStr);\n    }\n\n    TimelineChartXaxisFormat(chartOptions, extraData) {\n        const showTime = extraData.xaxis_show_time;\n        const showDate = extraData.xaxis_show_date;\n\n        chartOptions.xaxis.labels = chartOptions.xaxis.labels || {};\n        chartOptions.xaxis.labels.formatter = (val) => {\n            return this.dateFormat(val, showTime, showDate);\n        };\n    }\n    applyDataLabelFormatter(chartOptions, extraData) {\n        const showTime = extraData.xaxis_show_time;\n        const showDate = extraData.xaxis_show_date;\n        const datalabelPreFix = extraData.chart_datalabel_prefix ?? '';\n        const datalabelPostFix = extraData.chart_datalabel_postfix ?? '';\n\n        chartOptions.dataLabels = chartOptions.dataLabels || {};\n        chartOptions.dataLabels.formatter = (val) => {\n            if (Array.isArray(val) && val.length === 2) {\n                const [start, end] = val;\n                const diffMs = end - start;\n                const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n                const hours = Math.floor((diffMs % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n                const minutes = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));\n                return `${datalabelPreFix}${days} days ${hours} hours ${minutes} minutes${datalabelPostFix}`;\n            }\n            return datalabelPreFix + 'N/A' + datalabelPostFix;\n        };\n    }\n\n    applyTooltipFormatter(chartOptions, extraData) {\n        chartOptions.tooltip = chartOptions.tooltip || {};\n        chartOptions.tooltip.custom = function ({ series, seriesIndex, dataPointIndex, w }) {\n            const data = w.config.series[seriesIndex].data[dataPointIndex];\n            const label = data.x || 'Task';\n\n            const format = (timestamp) => {\n                const date = new Date(timestamp);\n                const day = String(date.getDate()).padStart(2, '0');\n                const month = date.toLocaleString('en-US', { month: 'short' });\n                const year = date.getFullYear();\n                const hours = String(date.getHours()).padStart(2, '0');\n                const minutes = String(date.getMinutes()).padStart(2, '0');\n                return `${day} ${month} ${year} ${hours}:${minutes}`;\n            };\n\n            const [start, end] = data.y;\n\n            return `\n            <div style=\"padding: 8px;\">\n                <strong>${label}</strong><br/>\n                ${format(start)} â†’ ${format(end)}\n            </div>\n        `;\n        };\n    }\n\n\n    getChartOptions(finalChartOptions, chartType, extraData, responsive_options,elementId) {\n        if (chartType === 'timeline') {\n            finalChartOptions.chart = finalChartOptions.chart || {};\n            finalChartOptions.xaxis = finalChartOptions.xaxis || {};\n            finalChartOptions.plotOptions = {\n                bar: {\n                    horizontal: true,\n                    rangeBarGroupRows: true,\n                },\n            };\n            finalChartOptions.xaxis.type = 'datetime';\n            finalChartOptions.responsive = responsive_options;\n            finalChartOptions.chart.events = {\n                mounted: (chartContext, config) => {\n                    const chartElement = document.querySelector(`.graphina-elementor-chart[data-element_id=\"${elementId}\"]`);\n                    if (chartElement) {\n                        chartElement.style.height = '';\n                    }\n                },\n            };\n\n            this.TimelineChartXaxisFormat(finalChartOptions, extraData);\n            this.applyTooltipFormatter(finalChartOptions, extraData);\n            this.applyDataLabelFormatter(finalChartOptions, extraData);\n        }\n\n        return finalChartOptions;\n    }\n}\n\n// Initialize TimelineChart\nwindow.graphinaTimelineChart = new TimelineChart();"],"names":["TimelineChart","GraphinaApexChartBase","element","timestamp","showTime","showDate","date","pad","day","month","year","hours","minutes","dateStr","timeStr","chartOptions","extraData","val","datalabelPreFix","datalabelPostFix","start","end","diffMs","days","series","seriesIndex","dataPointIndex","w","data","label","format","finalChartOptions","chartType","responsive_options","elementId","chartContext","config","chartElement"],"mappings":"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"}