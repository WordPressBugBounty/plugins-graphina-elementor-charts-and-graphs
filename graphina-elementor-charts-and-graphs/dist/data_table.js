class c{constructor(){this.tableHandlers={},this.tableId="",this.dataTable={},this.init(),this.observer={}}init(){this.setUpTableHandler(),this.bindEventHandlers()}bindEventHandlers(){jQuery(window).on("elementor/frontend/init",this.handleElementorWidgetInit.bind(this)),jQuery(window).on("load",()=>{jQuery(".graphina-jquery-data-table").each((e,i)=>{this.initializeTables(jQuery(i))})}),jQuery(document.body).off("click",".graphina-filter-div-button"),jQuery(document.body).on("click",".graphina-filter-div-button",this.debounce(this.handleChartFilterTable.bind(this),300))}debounce(e,i){let t;return function(...a){const r=this;clearTimeout(t),t=setTimeout(()=>e.apply(r,a),i)}}handleChartFilterTable(e){const i=e.currentTarget,t=jQuery(i).data("element_id"),a=jQuery(`.graphina-jquery-data-table[data-element_id="${t}"]`);a.length>0&&this.setupTable(a,[])}handleElementorWidgetInit(){elementorFrontend.hooks.addAction("frontend/element_ready/data_table_lite.default",e=>{console.log("Initializing jQuery Data Table...");const i=e.find(".graphina-jquery-data-table");i.length>0&&this.initializeTables(i)})}initializeTables(e){const i=e.data("chart_type");this.tableHandlers[i]&&this.tableHandlers[i](e)}setUpTableHandler(){this.tableHandlers={data_table_lite:e=>this.observeTableElement(e,"data_table_lite")}}observeTableElement(e,i){const t=e.data("element_id");gcfe_public_localize.view_port==="off"?(this.observer[t]||(this.observer[t]=new IntersectionObserver(a=>{a.forEach(r=>{r.isIntersecting&&(this.setupTable(jQuery(r.target),i),this.observer[t].unobserve(r.target))})},{threshold:.1})),this.observer[t].observe(e[0])):this.setupTable(e,i)}getDynamicData(e,i,t,a){let r=jQuery(`[data-element_id="${t}"]`).closest("[data-elementor-id]").data("elementor-id");return new Promise((h,d)=>{jQuery.ajax({url:gcfe_public_localize.ajaxurl,type:"POST",dataType:"json",data:{action:"get_jquery_datatable_data",nonce:gcfe_public_localize.table_nonce,chartType:"data_table_lite",post_id:r,element_id:t,series_count:0,settings:JSON.stringify(e),selected_field:a},success:l=>{jQuery("#data_table_lite_loading_"+t).hide(),jQuery("#data_table_lite_no_data_"+t).hide(),h(l)},error:l=>{jQuery("#data_table_lite_loading_"+t).hide(),jQuery("#data_table_lite_no_data_"+t).hide(),console.error("AJAX Error:",l),d(new Error("AJAX request failed."))}})})}async setupTable(e,i){const t=e.data("element_id");this.tableId=t;let a=e.data("chart_data");const r=e.data("extra_data"),h=e.data("settings"),d=".data_table_lite_"+t;if(r.hide_column_header&&(a.headerCallback=function(l,n,s,o,b){jQuery(l).hide()}),a.fnInitComplete=()=>{jQuery(".dataTables_scrollBody").css({overflow:"hidden",border:"0"}),jQuery(`#data_table_lite_${t} thead th`).addClass("all graphina-datatable-columns"),jQuery(`#data_table_lite_${t} tbody td`).addClass("graphina-datatable-tbody-td");const l=jQuery(".dataTables_scrollFoot");l.css("overflow","auto"),l.on("scroll",function(){jQuery(".dataTables_scrollBody").scrollLeft(jQuery(this).scrollLeft())})},a.rowCallback=function(l,n,s){s%2===0?jQuery(l).addClass("odd"):jQuery(l).addClass("even")},this.dataTable[t]&&(this.dataTable[t].clear().destroy(),jQuery(d).empty()),r.is_dynamic_table){let l=[];const n=jQuery(`#graphina_chart_filter_${t}`).data("total_filter");for(let o=0;o<n;o++)l[o]=jQuery(`#graphina-start-date_${o}${t}`).val()??jQuery(`#graphina-drop_down_filter_${o}${t}`).val();const s=await this.getDynamicData(h,r,t,l);s.data.body.length!==0&&s.data.header.length!==0?(a.data=s.data.body,a.columns=s.data.header,jQuery("#data_table_lite_loading_"+t).hide()):jQuery("#data_table_lite_loading_"+t).show()}else a.columns.length>0&&jQuery("#data_table_lite_loading_"+t).hide();if(a.columns&&a.columns.length>0){const l="<thead><tr>"+a.columns.map(n=>`<th>${n.title}</th>`).join("")+"</tr></thead>";jQuery(d).append(l)}if(this.dataTable[t]=jQuery(d).DataTable(a),r.table_footer&&jQuery(`#data_table_lite_${t}`).append("<tfoot><tr>"+a.columns.map(l=>`<th class="${r.header_class}">${l.title}</th>`).join("")+"</tr></tfoot>"),r.table_data_direct){this.dataTable[t].destroy(),jQuery(d).empty();const l="<thead><tr>"+a.columns.map(n=>`<th>${n.title}</th>`).join("")+"</tr></thead>";jQuery(d).append(l),this.dataTable[t]=jQuery(d).DataTable(a)}}}window.graphinaDataTable=new c;
//# sourceMappingURL=data_table.js.map
