{"version":3,"file":"brush-Cza07yQt.js","sources":["../assets/elementor/js/apex-chart/BrushChart.js"],"sourcesContent":["import GraphinaApexChartBase from './GraphinaApexChartBase';\n\n// Child class specifically for Brush Charts\nexport default class BrushChart extends GraphinaApexChartBase {\n    constructor() {\n        super();\n        this.observer = null; // For IntersectionObserver\n        this.secondaryChart = [];\n        this.secondaryChartData = [];\n        this.dynamic_data  = []\n    }\n\n    // Setup handlers for brush chart type\n    setUpChartsHandler() {\n        this.chartHandlers = {\n            brush: (element) => this.observeChartElement(element, 'area'),\n        };\n    }\n\n    // Setup IntersectionObserver to call setupChart when the element is in the viewport\n    observeChartElement(element, chartType) {\n        if (gcfe_public_localize.view_port === 'off') {\n            if (!this.observer) {\n                this.observer = new IntersectionObserver((entries) => {\n                    entries.forEach((entry) => {\n                        if (entry.isIntersecting) {\n                            // Element is in viewport; initialize the chart\n                            this.setupChart(jQuery(entry.target), chartType);\n                            // Stop observing the element after initializing the chart\n                            this.observer.unobserve(entry.target);\n                        }\n                    });\n                }, { threshold: 0.1 }); // Trigger when at least 10% of the element is visible\n            }\n            this.observer.observe(element[0]); // Start observing the chart element\n        } else {\n            this.setupChart(element, chartType);\n        }\n    }\n\n    afterRenderChart(chart, elementId,extra_data) {\n        // Ensure secondary chart is initialized after primary chart is rendered\n        if(chart){\n        }\n        this.initSChart(elementId,extra_data);\n    }\n\n    getChartOptions(finalChartOptions, chartType, extraData, responsive_options, elementId) {\n        if (chartType === 'brush') {\n            finalChartOptions.responsive = responsive_options\n        }\n        return finalChartOptions;\n    }\n    processDynamicData(dynamicData,elementId,extraData){\n        if( (extraData.chart_data_option === true)){\n            this.dynamic_data = dynamicData;\n        }else{\n            this.dynamic_data = {}\n        }\n\n    }\n\n    initSChart(elementId,extra_data) {\n        const chartEle = jQuery(`.graphina-brush-chart-${elementId}-2`)\n        let primarychartOption = chartEle.data('second_chart_options')\n        ApexCharts.exec(`brush-chart-${elementId}-2`, 'destroy');\n        if (this.secondaryChart[elementId]) {\n            this.secondaryChart[elementId].destroy()\n        }\n        if( this.dynamic_data.length > 0 && (this.dynamic_data.extra.series.length > 0) && (extra_data.chart_data_option === true)){\n            primarychartOption.series = this.dynamic_data.extra.series\n            primarychartOption.xaxis.categories = this.dynamic_data.extra.category\n        }\n\n        this.applyYAxisFormatter(primarychartOption,extra_data)\n        this.applyXAxisFormatter(primarychartOption, extra_data);\n\n        try {\n            this.secondaryChart[elementId] = new ApexCharts(chartEle[0], primarychartOption);\n            this.secondaryChart[elementId].render();\n        } catch (error) {\n            console.log(error);\n        }\n        \n    }\n}\n\n// Initialize BrushChart\nnew BrushChart();\n"],"names":["BrushChart","GraphinaApexChartBase","element","chartType","entries","entry","chart","elementId","extra_data","finalChartOptions","extraData","responsive_options","dynamicData","chartEle","primarychartOption","error"],"mappings":"wDAGe,MAAMA,UAAmBC,CAAsB,CAC1D,aAAc,CACV,MAAO,EACP,KAAK,SAAW,KAChB,KAAK,eAAiB,CAAE,EACxB,KAAK,mBAAqB,CAAE,EAC5B,KAAK,aAAgB,CAAA,CAC7B,CAGI,oBAAqB,CACjB,KAAK,cAAgB,CACjB,MAAQC,GAAY,KAAK,oBAAoBA,EAAS,MAAM,CAC/D,CACT,CAGI,oBAAoBA,EAASC,EAAW,CAChC,qBAAqB,YAAc,OAC9B,KAAK,WACN,KAAK,SAAW,IAAI,qBAAsBC,GAAY,CAClDA,EAAQ,QAASC,GAAU,CACnBA,EAAM,iBAEN,KAAK,WAAW,OAAOA,EAAM,MAAM,EAAGF,CAAS,EAE/C,KAAK,SAAS,UAAUE,EAAM,MAAM,EAEhE,CAAqB,CACrB,EAAmB,CAAE,UAAW,EAAG,CAAE,GAEzB,KAAK,SAAS,QAAQH,EAAQ,CAAC,CAAC,GAEhC,KAAK,WAAWA,EAASC,CAAS,CAE9C,CAEI,iBAAiBG,EAAOC,EAAUC,EAAY,CAI1C,KAAK,WAAWD,EAAUC,CAAU,CAC5C,CAEI,gBAAgBC,EAAmBN,EAAWO,EAAWC,EAAoBJ,EAAW,CACpF,OAAIJ,IAAc,UACdM,EAAkB,WAAaE,GAE5BF,CACf,CACI,mBAAmBG,EAAYL,EAAUG,EAAU,CAC1CA,EAAU,oBAAsB,GACjC,KAAK,aAAeE,EAEpB,KAAK,aAAe,CAAA,CAGhC,CAEI,WAAWL,EAAUC,EAAY,CAC7B,MAAMK,EAAW,OAAO,yBAAyBN,CAAS,IAAI,EAC9D,IAAIO,EAAqBD,EAAS,KAAK,sBAAsB,EAC7D,WAAW,KAAK,eAAeN,CAAS,KAAM,SAAS,EACnD,KAAK,eAAeA,CAAS,GAC7B,KAAK,eAAeA,CAAS,EAAE,QAAO,EAEtC,KAAK,aAAa,OAAS,GAAM,KAAK,aAAa,MAAM,OAAO,OAAS,GAAOC,EAAW,oBAAsB,KACjHM,EAAmB,OAAS,KAAK,aAAa,MAAM,OACpDA,EAAmB,MAAM,WAAa,KAAK,aAAa,MAAM,UAGlE,KAAK,oBAAoBA,EAAmBN,CAAU,EACtD,KAAK,oBAAoBM,EAAoBN,CAAU,EAEvD,GAAI,CACA,KAAK,eAAeD,CAAS,EAAI,IAAI,WAAWM,EAAS,CAAC,EAAGC,CAAkB,EAC/E,KAAK,eAAeP,CAAS,EAAE,OAAQ,CAC1C,OAAQQ,EAAO,CACZ,QAAQ,IAAIA,CAAK,CAC7B,CAEA,CACA,CAGA,IAAIf"}