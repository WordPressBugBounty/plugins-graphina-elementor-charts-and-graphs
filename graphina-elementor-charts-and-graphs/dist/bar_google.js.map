{"version":3,"file":"bar_google.js","sources":["../assets/elementor/js/google-chart/BarGoogleChart.js"],"sourcesContent":["import GraphinaGoogleChartBase from './GraphinaGoogleChartBase';\n\n// Child class specifically for Bar Charts\nexport default class BarChart extends GraphinaGoogleChartBase {\n    // Setup handlers for Bar Chart\n    setUpChartsHandler() {\n        this.chartHandlers = {\n            bar_google: (element) => this.observeChartElement(element, 'BarChart'),\n        };\n    }\n\n    // Setup IntersectionObserver to call setupChart when the element is in the viewport\n    observeChartElement(element, chartType) {\n        if (gcfe_public_localize.view_port === 'off') {\n            if (!this.observer) {\n                this.observer = new IntersectionObserver((entries) => {\n                    entries.forEach((entry) => {\n                        if (entry.isIntersecting) {\n                            // Element is in viewport; initialize the chart\n                            this.setupChart(jQuery(entry.target), chartType);\n                            // Stop observing the element after initializing the chart\n                            this.observer.unobserve(entry.target);\n                        }\n                    });\n                }, { threshold: 0.1 }); // Trigger when at least 10% of the element is visible\n            }\n            this.observer.observe(element[0]); // Start observing the chart element\n        } else {\n            this.setupChart(element, chartType);\n        }\n        this.setupChartTypeSwitcher(element);\n    }\n    \n    // Customize chart options for Bar Charts (if needed)\n    getFinalChartOptions(chartOptions,elementId){\n        if( chartOptions.vAxis && chartOptions.vAxis.format === 'percent'){\n            chartOptions.vAxis.format = '#\\'%\\''\n        }\n        return chartOptions\n    }\n\n    setupTableData(dynamicData, dataTable, googleChart, googleChartTexture, extraData) {\n    const googleData = dynamicData?.google_chart_data;\n    const hasGoogleData = googleData && Array.isArray(googleData.title_array) && Array.isArray(googleData.data);\n\n    if (hasGoogleData && googleData.title_array.length > 0 && googleData.data.length > 0) {\n        // First column: string label\n        dataTable.addColumn('string', googleData.title);\n\n        // Add number columns for data series\n        googleData.title_array.forEach(() => {\n            dataTable.addColumn('number', '');\n            if (googleData.annotation_show) {\n                dataTable.addColumn({ type: 'string', role: 'annotation' });\n            }\n        });\n\n        // Add rows\n        googleData.data.forEach((row) => {\n            dataTable.addRow(row);\n        });\n\n        googleChart.show();\n        googleChartTexture.hide();\n    } else if (Array.isArray(dynamicData.columns) && dynamicData.columns.length > 0 &&\n               Array.isArray(dynamicData.rows) && dynamicData.rows.length > 0) {\n\n        dynamicData.columns.forEach((col) => dataTable.addColumn(col));\n        dynamicData.rows.forEach((row) => dataTable.addRow(row));\n\n        googleChart.show();\n        googleChartTexture.hide();\n    } else {\n        googleChart.hide();\n        googleChartTexture.show();\n    }\n}\n\n}\n// Initialize Bar Chart\nwindow.graphinaGoogleBarChart = new BarChart();\n"],"names":["BarChart","GraphinaGoogleChartBase","element","chartType","entries","entry","chartOptions","elementId","dynamicData","dataTable","googleChart","googleChartTexture","extraData","googleData","row","col"],"mappings":"iDAGe,MAAMA,UAAiBC,CAAwB,CAE1D,oBAAqB,CACjB,KAAK,cAAgB,CACjB,WAAaC,GAAY,KAAK,oBAAoBA,EAAS,UAAU,CACxE,CACT,CAGI,oBAAoBA,EAASC,EAAW,CAChC,qBAAqB,YAAc,OAC9B,KAAK,WACN,KAAK,SAAW,IAAI,qBAAsBC,GAAY,CAClDA,EAAQ,QAASC,GAAU,CACnBA,EAAM,iBAEN,KAAK,WAAW,OAAOA,EAAM,MAAM,EAAGF,CAAS,EAE/C,KAAK,SAAS,UAAUE,EAAM,MAAM,EAEhE,CAAqB,CACrB,EAAmB,CAAE,UAAW,EAAG,CAAE,GAEzB,KAAK,SAAS,QAAQH,EAAQ,CAAC,CAAC,GAEhC,KAAK,WAAWA,EAASC,CAAS,EAEtC,KAAK,uBAAuBD,CAAO,CAC3C,CAGI,qBAAqBI,EAAaC,EAAU,CACxC,OAAID,EAAa,OAASA,EAAa,MAAM,SAAW,YACpDA,EAAa,MAAM,OAAS,QAEzBA,CACf,CAEI,eAAeE,EAAaC,EAAWC,EAAaC,EAAoBC,EAAW,CACnF,MAAMC,EAAaL,GAAA,YAAAA,EAAa,kBACVK,GAAc,MAAM,QAAQA,EAAW,WAAW,GAAK,MAAM,QAAQA,EAAW,IAAI,GAErFA,EAAW,YAAY,OAAS,GAAKA,EAAW,KAAK,OAAS,GAE/EJ,EAAU,UAAU,SAAUI,EAAW,KAAK,EAG9CA,EAAW,YAAY,QAAQ,IAAM,CACjCJ,EAAU,UAAU,SAAU,EAAE,EAC5BI,EAAW,iBACXJ,EAAU,UAAU,CAAE,KAAM,SAAU,KAAM,aAAc,CAE1E,CAAS,EAGDI,EAAW,KAAK,QAASC,GAAQ,CAC7BL,EAAU,OAAOK,CAAG,CAChC,CAAS,EAEDJ,EAAY,KAAM,EAClBC,EAAmB,KAAM,GAClB,MAAM,QAAQH,EAAY,OAAO,GAAKA,EAAY,QAAQ,OAAS,GACnE,MAAM,QAAQA,EAAY,IAAI,GAAKA,EAAY,KAAK,OAAS,GAEpEA,EAAY,QAAQ,QAASO,GAAQN,EAAU,UAAUM,CAAG,CAAC,EAC7DP,EAAY,KAAK,QAASM,GAAQL,EAAU,OAAOK,CAAG,CAAC,EAEvDJ,EAAY,KAAM,EAClBC,EAAmB,KAAM,IAEzBD,EAAY,KAAM,EAClBC,EAAmB,KAAM,EAEjC,CAEA,CAEA,OAAO,uBAAyB,IAAIX"}