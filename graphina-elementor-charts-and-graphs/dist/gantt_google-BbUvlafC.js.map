{"version":3,"file":"gantt_google-BbUvlafC.js","sources":["../assets/elementor/js/google-chart/GanttGoogleChart.js"],"sourcesContent":["import GraphinaGoogleChartBase from './GraphinaGoogleChartBase';\n\n// Child class specifically for Gantt Charts\nexport default class GanttChart extends GraphinaGoogleChartBase {\n\n\n    // Setup handlers for Gantt Chart\n    setUpChartsHandler() {\n\n        this.chartHandlers = {\n            gantt_google: (element) => this.observeChartElement(element, 'Gantt'),\n        };\n    }\n\n    // Setup IntersectionObserver to call setupChart when the element is in the viewport\n    observeChartElement(element, chartType) {\n        if (gcfe_public_localize.view_port === 'off') {\n            if (!this.observer) {\n                this.observer = new IntersectionObserver((entries) => {\n                    entries.forEach((entry) => {\n                        if (entry.isIntersecting) {\n                            // Element is in viewport; initialize the chart\n                            this.setupChart(jQuery(entry.target), chartType);\n                            // Stop observing the element after initializing the chart\n                            this.observer.unobserve(entry.target);\n                        }\n                    });\n                }, { threshold: 0.1 }); // Trigger when at least 10% of the element is visible\n            }\n            this.observer.observe(element[0]); // Start observing the chart element\n        } else {\n            this.setupChart(element, chartType);\n        }\n    }\n\n\n    // Customize chart options for Gantt Charts (if needed)\n    getFinalChartOptions(chartOptions) {\n        // Customize options here if needed\n        return chartOptions;\n\n    }\n\n    getFinalChartData(chartData) {\n        return chartData;\n    }\n\n    setDependField(settings, extraData) {\n        const ele = window.parent.document.querySelectorAll('.elementor-control-iq_gantt_google_value_list_3_1_repeaters .elementor-repeater-fields');\n        const depend_columns = extraData.dependColumn;\n        ele.forEach((value, key) => {\n            const selectField = value.querySelector('[data-setting=\"iq_gantt_google_chart_value_3_element_dependencies\"]');\n            const id = value.querySelector('[data-setting=\"_id\"]').value;\n\n            if (selectField && Object.keys(depend_columns).length > 0) {\n                // Clear previous options\n                selectField.innerHTML = '';\n\n                // Add default \"Select\" option\n                selectField.append(new Option('Select', ''));\n\n                for (const key1 in depend_columns) {\n                    if (id !== key1) {\n                        const isSelected = settings['iq_gantt_google_value_list_3_1_repeaters'][key]['iq_gantt_google_chart_value_3_element_dependencies'][0] === key1;\n                        selectField.append(new Option(depend_columns[key1], key1.toLowerCase(), isSelected, isSelected));\n                    }\n                }\n            }\n        });\n\n    }\n\n\n    setupTableData(dynamicData,dataTable,googleChart,googleChartTexture,extraData){\n        if (dynamicData?.extra?.length > 0) {\n            dataTable.addColumn('string', 'Task ID');\n            dataTable.addColumn('string', 'Task Name');\n            dataTable.addColumn('string', 'Resource');\n            dataTable.addColumn('date', 'Start Date');\n            dataTable.addColumn('date', 'End Date');\n            dataTable.addColumn('number', 'Duration');\n            dataTable.addColumn('number', 'Percent Complete');\n            dataTable.addColumn('string', 'Dependencies');\n            let temp = dynamicData.extra.map((x) => {\n                return this.prepareGanttRowData(x)\n            });\n            temp.forEach(row => dataTable.addRow(row));\n        } else if (dynamicData.length > 0) {\n            dataTable.addColumn('string', 'Task ID');\n            dataTable.addColumn('string', 'Task Name');\n            dataTable.addColumn('string', 'Resource');\n            dataTable.addColumn('date', 'Start Date');\n            dataTable.addColumn('date', 'End Date');\n            dataTable.addColumn('number', 'Duration');\n            dataTable.addColumn('number', 'Percent Complete');\n            dataTable.addColumn('string', 'Dependencies');\n\n            let temp = dynamicData.map((x) => {\n                return this.prepareGanttRowData(x)\n            });\n\n            temp.forEach(row => dataTable.addRow(row))\n        } else {\n            googleChart.hide()\n            googleChartTexture.show()\n        }\n    }\n}\n// Initialize Gantt Chart\nnew GanttChart();\n"],"names":["GanttChart","GraphinaGoogleChartBase","element","chartType","entries","entry","chartOptions","chartData","settings","extraData","ele","depend_columns","value","key","selectField","id","key1","isSelected","dynamicData","dataTable","googleChart","googleChartTexture","_a","x","row"],"mappings":"0DAGe,MAAMA,UAAmBC,CAAwB,CAI5D,oBAAqB,CAEjB,KAAK,cAAgB,CACjB,aAAeC,GAAY,KAAK,oBAAoBA,EAAS,OAAO,CACvE,CACT,CAGI,oBAAoBA,EAASC,EAAW,CAChC,qBAAqB,YAAc,OAC9B,KAAK,WACN,KAAK,SAAW,IAAI,qBAAsBC,GAAY,CAClDA,EAAQ,QAASC,GAAU,CACnBA,EAAM,iBAEN,KAAK,WAAW,OAAOA,EAAM,MAAM,EAAGF,CAAS,EAE/C,KAAK,SAAS,UAAUE,EAAM,MAAM,EAEhE,CAAqB,CACrB,EAAmB,CAAE,UAAW,EAAG,CAAE,GAEzB,KAAK,SAAS,QAAQH,EAAQ,CAAC,CAAC,GAEhC,KAAK,WAAWA,EAASC,CAAS,CAE9C,CAII,qBAAqBG,EAAc,CAE/B,OAAOA,CAEf,CAEI,kBAAkBC,EAAW,CACzB,OAAOA,CACf,CAEI,eAAeC,EAAUC,EAAW,CAChC,MAAMC,EAAM,OAAO,OAAO,SAAS,iBAAiB,wFAAwF,EACtIC,EAAiBF,EAAU,aACjCC,EAAI,QAAQ,CAACE,EAAOC,IAAQ,CACxB,MAAMC,EAAcF,EAAM,cAAc,qEAAqE,EACvGG,EAAKH,EAAM,cAAc,sBAAsB,EAAE,MAEvD,GAAIE,GAAe,OAAO,KAAKH,CAAc,EAAE,OAAS,EAAG,CAEvDG,EAAY,UAAY,GAGxBA,EAAY,OAAO,IAAI,OAAO,SAAU,EAAE,CAAC,EAE3C,UAAWE,KAAQL,EACf,GAAII,IAAOC,EAAM,CACb,MAAMC,EAAaT,EAAS,yCAA4CK,CAAG,EAAE,mDAAsD,CAAC,IAAMG,EAC1IF,EAAY,OAAO,IAAI,OAAOH,EAAeK,CAAI,EAAGA,EAAK,YAAW,EAAIC,EAAYA,CAAU,CAAC,CACvH,CAEA,CACA,CAAS,CAET,CAGI,eAAeC,EAAYC,EAAUC,EAAYC,EAAmBZ,EAAU,SACtEa,EAAAJ,GAAA,YAAAA,EAAa,QAAb,YAAAI,EAAoB,QAAS,GAC7BH,EAAU,UAAU,SAAU,SAAS,EACvCA,EAAU,UAAU,SAAU,WAAW,EACzCA,EAAU,UAAU,SAAU,UAAU,EACxCA,EAAU,UAAU,OAAQ,YAAY,EACxCA,EAAU,UAAU,OAAQ,UAAU,EACtCA,EAAU,UAAU,SAAU,UAAU,EACxCA,EAAU,UAAU,SAAU,kBAAkB,EAChDA,EAAU,UAAU,SAAU,cAAc,EACjCD,EAAY,MAAM,IAAKK,GACvB,KAAK,oBAAoBA,CAAC,CACpC,EACI,QAAQC,GAAOL,EAAU,OAAOK,CAAG,CAAC,GAClCN,EAAY,OAAS,GAC5BC,EAAU,UAAU,SAAU,SAAS,EACvCA,EAAU,UAAU,SAAU,WAAW,EACzCA,EAAU,UAAU,SAAU,UAAU,EACxCA,EAAU,UAAU,OAAQ,YAAY,EACxCA,EAAU,UAAU,OAAQ,UAAU,EACtCA,EAAU,UAAU,SAAU,UAAU,EACxCA,EAAU,UAAU,SAAU,kBAAkB,EAChDA,EAAU,UAAU,SAAU,cAAc,EAEjCD,EAAY,IAAKK,GACjB,KAAK,oBAAoBA,CAAC,CACpC,EAEI,QAAQC,GAAOL,EAAU,OAAOK,CAAG,CAAC,IAEzCJ,EAAY,KAAI,EAChBC,EAAmB,KAAI,EAEnC,CACA,CAEA,IAAIrB"}