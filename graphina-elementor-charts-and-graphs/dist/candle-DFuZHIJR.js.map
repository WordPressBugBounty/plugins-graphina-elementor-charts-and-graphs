{"version":3,"file":"candle-DFuZHIJR.js","sources":["../assets/elementor/js/apex-chart/CandleChart.js"],"sourcesContent":["import GraphinaApexChartBase from './GraphinaApexChartBase';\n\n// Child class specifically for Candle Charts\nexport default class CandleChart extends GraphinaApexChartBase {\n    constructor() {\n        super();\n        this.observer = null; // For IntersectionObserver\n    }\n\n    // Setup handlers for Candle chart type\n    setUpChartsHandler() {\n        this.chartHandlers = {\n            candle: (element) => this.observeChartElement(element, 'candle'),\n        };\n    }\n\n    // Setup IntersectionObserver to call setupChart when the element is in the viewport\n    observeChartElement(element, chartType) {\n        if(gcfe_public_localize.view_port === 'off'){\n            if (!this.observer) {\n                this.observer = new IntersectionObserver((entries) => {\n                    entries.forEach((entry) => {\n                        if (entry.isIntersecting) {\n                            // Element is in viewport; initialize the chart\n                            this.setupChart(jQuery(entry.target), chartType);\n                            // Stop observing the element after initializing the chart\n                            this.observer.unobserve(entry.target);\n                        }\n                    });\n                }, { threshold: 0.1 }); // Trigger when at least 10% of the element is visible\n            }\n            this.observer.observe(element[0]); // Start observing the chart element\n        }else{\n            this.setupChart(element,chartType);\n        }\n    }\n\n    dateFormat(timestamp, isTime = false, isDate = false) {\n        let dateSeparator = '-';\n        let date = new Date(timestamp);\n        let hours = date.getHours();\n        let minutes = \"0\" + date.getMinutes();\n        let day = date.getDate();\n        let month = date.getMonth() + 1;\n        let year = date.getFullYear()\n        return (isDate ? (day + dateSeparator + month + dateSeparator + year) : '') + (isDate && isTime ? ' ' : '') + (isTime ? (hours + ':' + minutes.substr(-2)) : '');\n    }\n\n    candleChartXaxisFormat(chartOptions,extraData){\n        const showTime = extraData.xaxis_show_time\n        const showDate = extraData.xaxis_show_date\n        \n        let prefix  = ''\n        let postfix = ''\n        if(extraData.xaxis_label_prefix_show){\n            prefix  = extraData.xaxis_label_prefix\n            postfix = extraData.xaxis_label_postfix\n        }\n        chartOptions.xaxis.labels.formatter = (val) => {\n            val = prefix + this.dateFormat(val,showTime,showDate) + postfix;\n            return val\n        }\n    }\n    getChartOptions(finalChartOptions, chartType,extraData,responsive_options,elementId) {\n        if (chartType === 'candle') {\n            finalChartOptions.xaxis.type = 'datetime';\n            finalChartOptions.responsive = responsive_options\n        }\n        this.candleChartXaxisFormat(finalChartOptions,extraData)\n        return finalChartOptions;\n    }\n\n}\n\n// Initialize CandleChart\nnew CandleChart();\n"],"names":["CandleChart","GraphinaApexChartBase","element","chartType","entries","entry","timestamp","isTime","isDate","dateSeparator","date","hours","minutes","day","month","year","chartOptions","extraData","showTime","showDate","prefix","postfix","val","finalChartOptions","responsive_options","elementId"],"mappings":"wDAGe,MAAMA,UAAoBC,CAAsB,CAC3D,aAAc,CACV,MAAO,EACP,KAAK,SAAW,IACxB,CAGI,oBAAqB,CACjB,KAAK,cAAgB,CACjB,OAASC,GAAY,KAAK,oBAAoBA,EAAS,QAAQ,CAClE,CACT,CAGI,oBAAoBA,EAASC,EAAW,CACjC,qBAAqB,YAAc,OAC7B,KAAK,WACN,KAAK,SAAW,IAAI,qBAAsBC,GAAY,CAClDA,EAAQ,QAASC,GAAU,CACnBA,EAAM,iBAEN,KAAK,WAAW,OAAOA,EAAM,MAAM,EAAGF,CAAS,EAE/C,KAAK,SAAS,UAAUE,EAAM,MAAM,EAEhE,CAAqB,CACrB,EAAmB,CAAE,UAAW,EAAG,CAAE,GAEzB,KAAK,SAAS,QAAQH,EAAQ,CAAC,CAAC,GAEhC,KAAK,WAAWA,EAAQC,CAAS,CAE7C,CAEI,WAAWG,EAAWC,EAAS,GAAOC,EAAS,GAAO,CAClD,IAAIC,EAAgB,IAChBC,EAAO,IAAI,KAAKJ,CAAS,EACzBK,EAAQD,EAAK,SAAU,EACvBE,EAAU,IAAMF,EAAK,WAAY,EACjCG,EAAMH,EAAK,QAAS,EACpBI,EAAQJ,EAAK,SAAQ,EAAK,EAC1BK,EAAOL,EAAK,YAAW,EAC3B,OAAQF,EAAUK,EAAMJ,EAAgBK,EAAQL,EAAgBM,EAAQ,KAAOP,GAAUD,EAAS,IAAM,KAAOA,EAAUI,EAAQ,IAAMC,EAAQ,OAAO,EAAE,EAAK,GACrK,CAEI,uBAAuBI,EAAaC,EAAU,CAC1C,MAAMC,EAAWD,EAAU,gBACrBE,EAAWF,EAAU,gBAE3B,IAAIG,EAAU,GACVC,EAAU,GACXJ,EAAU,0BACTG,EAAUH,EAAU,mBACpBI,EAAUJ,EAAU,qBAExBD,EAAa,MAAM,OAAO,UAAaM,IACnCA,EAAMF,EAAS,KAAK,WAAWE,EAAIJ,EAASC,CAAQ,EAAIE,EACjDC,EAEnB,CACI,gBAAgBC,EAAmBpB,EAAUc,EAAUO,EAAmBC,EAAW,CACjF,OAAItB,IAAc,WACdoB,EAAkB,MAAM,KAAO,WAC/BA,EAAkB,WAAaC,GAEnC,KAAK,uBAAuBD,EAAkBN,CAAS,EAChDM,CACf,CAEA,CAGA,IAAIvB"}